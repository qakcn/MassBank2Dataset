# This is the 2nd step of generating data set from MassBank database.
# This script does nothing, it is just an instruction to explain how to use 
# SIRIUS to generate fragment trees from MS files.
#
# Author: qakcn
# Email: qakcn@hotmail.com
# Date: 2023-11-29

# Copyright 2023 qakcn
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from classes.TerminalStyle import TS

TS.p(f"""
This script {TS.red("does nothing")}, it is just an instruction to explain how to use 
{TS.cyan("SIRIUS")} to generate fragment trees from MS files.

1) Run {TS.cyan("SIRIUS")} and import the {TS.magenta(".ms")} file which are generated by 
   {TS.magenta("1.massbank2ms.py")}.

2) Compute the fragment tree in {TS.cyan("SIRIUS")}.

3) Export the fragment tree as a {TS.magenta(".json")} file.

   Use the {TS.cyan("SIRIUS")} CLI tool and run the following command:

        sirius -i {TS.blue("<workspace>")} ftree-export --json -o {TS.yellow("<output_dir>")}

   Where {TS.blue("<workspace>")} is the directory where you store your project in the 
   previous steps, and {TS.yellow("<output_dir>")} is the directory where you want to store 
   your fragment tree exported {TS.magenta(".json")} file.

4) Put the directory in {TS.magenta("inputs")} and rename it to {TS.magenta("ftrees")}, which directory you 
   generated in previous step that storing the exported fragment tree {TS.magenta(".json")} 
   file, then continue to run {TS.magenta("3.ftree_attach.py")}.
"""
)